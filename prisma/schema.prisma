// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  
}


model refreshToken {
  id          String   @id @unique(map: "RefreshToken_id_key")
  hashedToken String
  userId      String
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updateAt    DateTime @default(now())
  user        user     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "RefreshToken_userId_fkey")

  @@index([userId], map: "RefreshToken_userId_fkey")
}

model user {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  createdAt    DateTime       @default(now())
  updateAt     DateTime       @default(now())
  role ROLE @default(USER)
  refreshtoken refreshToken[]
  enrollemnet enrollement[]
  delete Boolean @default(false)
}

model course {
  id String @id @default(uuid())
  name String
  description String @db.MediumText
  price Int
  categoryId String
  category category @relation(fields: [categoryId], references: [id])
  enrollement enrollement[]
  image String @default("null")
  createdAt    DateTime       @default(now())
  updateAt     DateTime       @default(now())
  delete Boolean @default(false)

  @@fulltext([name])
}

model enrollement {
  id String @id @default(uuid())
  userId String
  user user @relation(fields: [userId],references: [id])
  courseId String
  course course @relation(fields: [courseId],references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId,courseId])
}

model category {
  id String @id @default(uuid())
  name String 
  coruse course[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum ROLE {
  ADMIN
  USER
}
